@mixin mq-xsmall-up {
  @media screen and (min-width: map-get($breakpoints, xsmall)) {
    @content;
  }
}

@mixin mq-xsmall-down {
  @media screen and (max-width: (map-get($breakpoints, xsmall) - 1px)) {
    @content;
  }
}

@mixin mq-small-up {
  @media screen and (min-width: map-get($breakpoints, small)) {
    @content;
  }
}

@mixin mq-small-down {
  @media screen and (max-width: (map-get($breakpoints, small) - 1px)) {
    @content;
  }
}

@mixin mq-medium-up {
  @media screen and (min-width: map-get($breakpoints, medium)) {
    @content;
  }
}

@mixin mq-medium-down {
  @media screen and (max-width: (map-get($breakpoints, medium) - 1px)) {
    @content;
  }
}

@mixin mq-large-up {
  @media screen and (min-width: map-get($breakpoints, large)) {
    @content;
  }
}

@mixin mq-large-down {
  @media screen and (max-width: (map-get($breakpoints, large) - 1px)) {
    @content;
  }
}

@mixin mq-xlarge-up {
  @media screen and (min-width: map-get($breakpoints, xlarge)) {
    @content;
  }
}

@mixin mq-xlarge-down {
  @media screen and (max-width: (map-get($breakpoints, xlarge) - 1px)) {
    @content;
  }
}

@mixin to-rem($property, $value, $important: false) {
  #{$property}: ($value + px) unquote(if($important, ' !important', ''));
  #{$property}: (calc($value / 16) + rem) unquote(if($important, ' !important', ''));
}

@mixin grid-columns($span: 12, $columns: 12) {
  width: 100%;
  max-width: (($span / $columns) * 100) * 1%;
}

@mixin grid-padding {
  padding-right: map-get($grid-padding, 'mobile', 'padding');
  padding-left: map-get($grid-padding, 'mobile', 'padding');

  @include mq-large-up {
    padding-right: map-get($grid-padding, 'desktop', 'padding');
    padding-left: map-get($grid-padding, 'desktop', 'padding');
  }
}